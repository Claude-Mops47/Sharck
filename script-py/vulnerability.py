import subprocess
import asyncio
from tqdm import tqdm

async def vulnerability_scan(ip):
    try:
        print(f'\nStarting vulnerability scan on {ip}')
        command = f'nmap -p- --script vuln {ip}'

        process = await asyncio.create_subprocess_exec(
            'bash', '-c', command,
            stdout=asyncio.subprocess.PIPE,
            stderr=asyncio.subprocess.PIPE
        )

        async def read_output(stream, pbar):
            while True:
                line = await stream.readline()
                if not line:
                    break
                tqdm.write(line.decode(), end="")
                pbar.update()

        pbar = tqdm(total=100, desc="Scanning", bar_format="{desc}: {percentage:.2f}%", position=0, leave=False)
        tasks = [read_output(process.stdout, pbar), read_output(process.stderr, pbar)]
        await asyncio.gather(*tasks)

        await process.wait()

        pbar.close()

    except Exception as e:
        print(f'An error occurred: {e}')

async def main(ip):
    await vulnerability_scan(ip)

if __name__ == "__main__":
    ip = input("Enter the target IP address: ")
    asyncio.run(main(ip))
